<template>
	<view class="select-city-wrap" :style="'height:'+windowHeight">
		<!-- 内容 -->
		<scroll-view class="scroll" :scroll-into-view="scrollIntoId" :scroll-y="true" :scroll-with-animation="true"
			:show-scrollbar="false" :style="'height:'+windowHeight">
			<view id="current" class="nav1-1">
				<u-icon style='margin-right: 6rpx;' name="search" color="#BCBCBC" size="28"></u-icon>
				<u-input :clearable='false' style='width: 570rpx !important;' v-model="keyword" type="text" placeholder='请输入城市名、拼音或首字母查询' />
			</view>
			<!-- 当前城市 -->
			<!-- <view style="height:200rpx">
				<text class="name"  id="current">当前城市</text>
				<view class="city-item" v-if="city">
					<view class="city-item-view" >
						<text class="city-item-text">{{ city }}</text>
					</view>
				</view>
			</view> -->

			<!-- 热门城市 -->
			<text class="name">热门城市</text>
			<view class="city-item" style="margin-bottom: 28rpx;">
				<view :class=" city== cityname?'city-item-viewa':'city-item-view' " v-for="(cityname, i) in hotCitys"
					:key="cityname" @click="onSelect(cityname)">
					<text :class=" city== cityname?'city-item-texta':'city-item-text' ">{{ cityname }}</text>
				</view>
			</view>
			<view style="margin-bottom: 28rpx;" :id="item.letter" v-for="item in cityData" :key="item.letter">
				<!-- ABCD -->
				<text class="letter">{{ item.letter }}</text>
				<!-- 城市 -->
				<view class="city-item">
					<view :class=" city== cityname?'city-item-viewa':'city-item-view' "
						v-for="(cityname, i) in item.list" :key="cityname" @click="onSelect(cityname)">
						<text :class=" city== cityname?'city-item-texta':'city-item-text' ">{{ cityname }}</text>
					</view>
				</view>
			</view>
		</scroll-view>

		<!-- 右边锚点 -->
		<view class="anchor" @touchstart="start" @touchmove="move" @touchend="end" v-if="sliding">
			<view>
				<view class="anchor-item"><text v-if=" slidingChoice == 'current' " class="anchor-text">#</text></view>
				<view class="anchor-item" v-for="(item,index) in anchorArr" :key="item">
					<text class="anchor-text-position" v-if=" slidingChoice==item ">{{item}}</text>
				</view>
			</view>
			<view>
				<view class="anchor-item" @click="scrollIntoId='current' "><text class="anchor-text">#</text></view>
				<view class="anchor-item" v-for="(item,index) in anchorArr" :key="item" @click="scrollIntoId=item">
					<text class="anchor-text">{{item}}</text>
				</view>
			</view>
		</view>
		<view class="anchor" v-else>
			<view>
				<view class="anchor-item" @click="scrollIntoId='current' "><text class="anchor-text">#</text></view>
				<view class="anchor-item" v-for="(item,index) in anchorArr" :key="item" @click="scrollIntoId=item">
					<text class="anchor-text">{{item}}</text>
				</view>
			</view>
		</view>


	</view>
</template>
<script>
	// hotCitys  热门城市  
	// value 当前选中城市
	// windowHeight  scroll的高 也是滑块的高 记得带单位!!! px rpx upx都支持
	// sliding 是否开始滑动选择 默认开启  false true
	// @onSelect   点击切换城市事件 参数为城市名称
	import cityData from './cityData.js'
	let anchorArr = ["A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "W", "X",
		"Y", "Z"
	];
	export default {
		props: {
			hotCitys: {
				type: Array,
				default () {
					return []
				}
			},
			value: {
				type: String
			},
			windowHeight: {
				type: String
			},
			// 开启滑动选择
			sliding: {
				type: Boolean,
				default: true
			},
		},
		data() {
			return {
				keyword:'',
				cityData,
				scrollIntoId: '',
				city: this.value,
				anchorArr,
				// 滑动中选中的具体值
				slidingChoice: "",
				//开始滑动位置
				startY: "",
				// 滑动中当前选中下标
				downIndex: -1,
			}
		},
		computed: {},
		created() {},
		mounted() {},
		methods: {
			// 点击城市
			onSelect(city) {
				this.city = city;
				this.$emit('onSelect', city)
			},
			// 开始滑动
			start(e) {
				// console.log("开始滑动",e);
				// #ifdef MP
				let eY = e.changedTouches[0].clientY
				// #endif
				// #ifdef APP-PLUS
				let eY = e.changedTouches[0].screenY
				// #endif
				this.startY = eY;
				// 计算点击时候下标
				let index = eY / (uni.upx2px(eY) / eY);
				index = parseInt((index - 200) / 40) - 1;
				this.downIndex = index;
				// console.log(this.downIndex)
			},
			// 开始移动
			move(e) {
				// console.log("开始移动",e);
				// #ifdef MP
				let downY = e.changedTouches[0].clientY;
				// #endif
				// #ifdef APP-PLUS
				let downY = e.changedTouches[0].screenY;
				// #endif

				let gap = this.startY - downY;
				let index = parseInt(gap / (uni.upx2px(gap) / gap) / 40);
				// 选中下标
				let optforIndex = this.downIndex - index;
				if (optforIndex < -1) {
					optforIndex = -1;
				} else if (optforIndex > 21) {
					optforIndex = 21;
				}
				this.slidingChoice = this.anchorArr[optforIndex];
				this.scrollIntoId = this.anchorArr[optforIndex];
				console.log(optforIndex,this.scrollIntoId)
			},
			// 滑动结束
			end(e) {
				// console.log("结束滑动",e)
				this.slidingChoice = '';
			},

		}
	}
</script>

<style scoped lang="scss">
	.nav1-1 {
		background: #F8FAFF !important;
		display: flex;
		align-items: center;
		border-radius: 30rpx;
		padding: 0 32rpx !important;
		margin: 0 32rpx 48rpx 32rpx;
	}
	
	// /deep/ .u-input {
	// 	background: #f4f4f5 !important;
	// 	border-radius: 30rpx;
	// 	width: 578rpx;
	// 	margin-left: 20rpx;
	// 	// padding: 0 30rpx !important;
	// }
	/deep/ .u-input__input{
		width: 540rpx !important;
	}
	.select-city-wrap {
		overflow: hidden;
	}

	/* 滑块 */
	.scroll {
		/* background-color: yellow; */
	}

	.name {
		color: #999;
		font-size: 24rpx;
		margin: 30rpx 32rpx;
	}

	/* 城市 */
	.letter {
		margin-bottom: 30rpx;
		margin-left: 32rpx;
		font-size: 24rpx;
		font-family: PingFangSC, PingFangSC-Regular;
		font-weight: 400;
		text-align: left;
		color: #121212;
		line-height: 34rpx;
	}

	.city-item {
		display: flex;
		flex-wrap: wrap;
		flex-direction: row;
		margin-left: 22rpx;
	}

	.city-item-view {
		width: 200rpx;
		height: 56rpx;
		background: #f8faff;
		border-radius: 4rpx;
		margin: 10rpx;
		justify-content: center;
		align-items: center;
		display: flex;
	}

	.city-item-viewa {
		/* width: 180rpx;
	height: 55rpx;
	margin: 15rpx;
	border: 1rpx solid #2f9bfe;
	border-radius: 6rpx;
	display: flex;
	justify-content: center;
	align-items: center;
	background-color: #d5ebff; */
		width: 200rpx;
		height: 56rpx;
		background: #f8faff;
		border-radius: 4rpx;
		margin: 10rpx;
		justify-content: center;
		align-items: center;
		display: flex;
	}

	.city-item-text {
		font-size: 28rpx;
		font-family: PingFangSC, PingFangSC-Regular;
		font-weight: 400;
		color: #121212;
	}

	.city-item-texta {
		/* font-size: 28rpx;
	color: #2f9bfe; */
		font-size: 28rpx;
		font-family: PingFangSC, PingFangSC-Regular;
		font-weight: 400;
		color: #121212;
	}

	/* 右锚点 */
	.anchor {
		/* background-color: pink; */
		position: fixed;
		right: 12rpx;
		top: -560rpx;
		z-index: 10;
		flex-direction: row;
	}

	.anchor-item {
		align-items: center;
		flex-direction: row;
		height: 40rpx;
		text-align: center;
	}

	.anchor-text-position {
		height: 40rpx;
		width: 40rpx;
		text-align: center;
		line-height: 40rpx;
		font-size: 32rpx;
		color: #333;
		background-color: #E5E5E5;
		border-radius: 20rpx;
	}

	.anchor-text {
		line-height: 40rpx;
		padding: 0 15rpx;
		color: #121212;
		font-size: 20rpx;
		font-family: PingFangSC, PingFangSC-Regular;
		font-weight: 400;
	}
</style>
